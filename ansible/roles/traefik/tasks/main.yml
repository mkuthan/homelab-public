- name: Create /etc/traefik
  ansible.builtin.file:
    path: /etc/traefik
    state: directory
    mode: "0755"

- name: Configure Traefik
  ansible.builtin.template:
    src: "traefik.yml.j2"
    dest: /etc/traefik/traefik.yml
    mode: "0644"
  notify: Restart Traefik

- name: Create /etc/traefik/dynamic
  ansible.builtin.file:
    path: /etc/traefik/dynamic
    state: directory
    mode: "0755"

- name: Configure Traefik dynamic HTTP configuration
  ansible.builtin.template:
    src: http.yml.j2
    dest: /etc/traefik/dynamic/http.yml
    mode: "0644"
  notify: Restart Traefik

- name: Create Traefik volumes
  community.docker.docker_volume:
    volume_name: "{{ item }}"
  loop:
    - traefik-letsencrypt

- name: Create Traefik container
  community.docker.docker_container:
    name: traefik
    image: traefik:latest

    env:
      CF_DNS_API_TOKEN: '{{ traefik_cf_api_token | default("") }}'
      DUCKDNS_TOKEN: '{{ traefik_duckdns_token | default("") }}'

    volumes:
      - /etc/traefik/:/etc/traefik/:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-letsencrypt:/letsencrypt:rw

    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`traefik.{{ ansible_domain }}`)
      traefik.http.routers.traefik.service: "api@internal"

    ports: "{{ traefik_ports | default([]) }}"

    networks: "{{ docker_networks }}"
    comparisons: "{{ docker_comparisons }}"
    image_name_mismatch: "{{ docker_image_name_mismatch }}"
    state: "{{ docker_state }}"
    restart_policy: "{{ docker_restart_policy }}"
    pull: "{{ docker_pull }}"

- name: Register Traefik container name
  ansible.builtin.set_fact:
    traefik_container_name: "traefik"
